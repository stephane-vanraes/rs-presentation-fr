{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/easing/index.mjs","../../node_modules/svelte/transition/index.mjs","../../node_modules/svelte/store/index.mjs","../../node_modules/svelte/motion/index.mjs","../../src/components/Navigation.svelte","../../src/_svx-layout.svelte","../../src/pages/01.svx","../../src/pages/02.svx","../../src/pages/03.svx","../../src/pages/04.svx","../../node_modules/renderless-svelte/src/TabControl.svelte","../../node_modules/renderless-svelte/src/TabControlItem.svelte","../../src/components/CodeTabs.svelte","../../src/examples/05/Accordeon.svelte","../../src/examples/05/Example.svelte","../../src/pages/05.svx","../../src/examples/06/Accordeon.svelte","../../src/examples/06/Example.svelte","../../src/pages/06.svx","../../src/examples/07/Accordeon.svelte","../../src/examples/07/Smurfs.svelte","../../src/examples/07/NotSmurfs.svelte","../../src/pages/08.svx","../../src/pages/09.svx","../../src/examples/10/NotificationProvider.svelte","../../src/examples/10/Smurfs.svelte","../../src/examples/10/Example.svelte","../../src/pages/10.svx","../../src/pages/12.svx","../../src/pages/13.svx","../../src/examples/14/Accordeon.svelte","../../src/examples/14/AccordeonItem.svelte","../../src/examples/14/Example.svelte","../../src/pages/14.svx","../../src/pages/15.svx","../../src/pages.js","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.24.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","export { identity as linear } from '../internal';\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nfunction backInOut(t) {\n    const s = 1.70158 * 1.525;\n    if ((t *= 2) < 1)\n        return 0.5 * (t * t * ((s + 1) * t - s));\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\nfunction backIn(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n}\nfunction backOut(t) {\n    const s = 1.70158;\n    return --t * t * ((s + 1) * t + s) + 1;\n}\nfunction bounceOut(t) {\n    const a = 4.0 / 11.0;\n    const b = 8.0 / 11.0;\n    const c = 9.0 / 10.0;\n    const ca = 4356.0 / 361.0;\n    const cb = 35442.0 / 1805.0;\n    const cc = 16061.0 / 1805.0;\n    const t2 = t * t;\n    return t < a\n        ? 7.5625 * t2\n        : t < b\n            ? 9.075 * t2 - 9.9 * t + 3.4\n            : t < c\n                ? ca * t2 - cb * t + cc\n                : 10.8 * t * t - 20.52 * t + 10.72;\n}\nfunction bounceInOut(t) {\n    return t < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\nfunction bounceIn(t) {\n    return 1.0 - bounceOut(1.0 - t);\n}\nfunction circInOut(t) {\n    if ((t *= 2) < 1)\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\nfunction circIn(t) {\n    return 1.0 - Math.sqrt(1.0 - t * t);\n}\nfunction circOut(t) {\n    return Math.sqrt(1 - --t * t);\n}\nfunction cubicInOut(t) {\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\nfunction cubicIn(t) {\n    return t * t * t;\n}\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\nfunction elasticInOut(t) {\n    return t < 0.5\n        ? 0.5 *\n            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *\n            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n        : 0.5 *\n            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n            1.0;\n}\nfunction elasticIn(t) {\n    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction elasticOut(t) {\n    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);\n}\nfunction expoInOut(t) {\n    return t === 0.0 || t === 1.0\n        ? t\n        : t < 0.5\n            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\nfunction expoIn(t) {\n    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction expoOut(t) {\n    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1)\n        return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n}\nfunction quadIn(t) {\n    return t * t;\n}\nfunction quadOut(t) {\n    return -t * (t - 2.0);\n}\nfunction quartInOut(t) {\n    return t < 0.5\n        ? +8.0 * Math.pow(t, 4.0)\n        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\nfunction quartIn(t) {\n    return Math.pow(t, 4.0);\n}\nfunction quartOut(t) {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\nfunction quintInOut(t) {\n    if ((t *= 2) < 1)\n        return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\nfunction quintIn(t) {\n    return t * t * t * t * t;\n}\nfunction quintOut(t) {\n    return --t * t * t * t * t + 1;\n}\nfunction sineInOut(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\nfunction sineIn(t) {\n    const v = Math.cos(t * Math.PI * 0.5);\n    if (Math.abs(v) < 1e-14)\n        return 1;\n    else\n        return 1 - v;\n}\nfunction sineOut(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\nexport { backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut };\n","import { cubicInOut, linear, cubicOut } from '../easing';\nimport { is_function, assign } from '../internal';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear }) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut }) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `overflow: hidden;` +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut }) {\n    const len = node.getTotalLength();\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from '../store';\nimport { now, loop, assign } from '../internal';\nimport { linear } from '../easing';\n\nfunction is_date(obj) {\n    return Object.prototype.toString.call(obj) === '[object Date]';\n}\n\nfunction tick_spring(ctx, last_value, current_value, target_value) {\n    if (typeof current_value === 'number' || is_date(current_value)) {\n        // @ts-ignore\n        const delta = target_value - current_value;\n        // @ts-ignore\n        const velocity = (current_value - last_value) / (ctx.dt || 1 / 60); // guard div by 0\n        const spring = ctx.opts.stiffness * delta;\n        const damper = ctx.opts.damping * velocity;\n        const acceleration = (spring - damper) * ctx.inv_mass;\n        const d = (velocity + acceleration) * ctx.dt;\n        if (Math.abs(d) < ctx.opts.precision && Math.abs(delta) < ctx.opts.precision) {\n            return target_value; // settled\n        }\n        else {\n            ctx.settled = false; // signal loop to keep ticking\n            // @ts-ignore\n            return is_date(current_value) ?\n                new Date(current_value.getTime() + d) : current_value + d;\n        }\n    }\n    else if (Array.isArray(current_value)) {\n        // @ts-ignore\n        return current_value.map((_, i) => tick_spring(ctx, last_value[i], current_value[i], target_value[i]));\n    }\n    else if (typeof current_value === 'object') {\n        const next_value = {};\n        for (const k in current_value)\n            // @ts-ignore\n            next_value[k] = tick_spring(ctx, last_value[k], current_value[k], target_value[k]);\n        // @ts-ignore\n        return next_value;\n    }\n    else {\n        throw new Error(`Cannot spring ${typeof current_value} values`);\n    }\n}\nfunction spring(value, opts = {}) {\n    const store = writable(value);\n    const { stiffness = 0.15, damping = 0.8, precision = 0.01 } = opts;\n    let last_time;\n    let task;\n    let current_token;\n    let last_value = value;\n    let target_value = value;\n    let inv_mass = 1;\n    let inv_mass_recovery_rate = 0;\n    let cancel_task = false;\n    function set(new_value, opts = {}) {\n        target_value = new_value;\n        const token = current_token = {};\n        if (value == null || opts.hard || (spring.stiffness >= 1 && spring.damping >= 1)) {\n            cancel_task = true; // cancel any running animation\n            last_time = now();\n            last_value = new_value;\n            store.set(value = target_value);\n            return Promise.resolve();\n        }\n        else if (opts.soft) {\n            const rate = opts.soft === true ? .5 : +opts.soft;\n            inv_mass_recovery_rate = 1 / (rate * 60);\n            inv_mass = 0; // infinite mass, unaffected by spring forces\n        }\n        if (!task) {\n            last_time = now();\n            cancel_task = false;\n            task = loop(now => {\n                if (cancel_task) {\n                    cancel_task = false;\n                    task = null;\n                    return false;\n                }\n                inv_mass = Math.min(inv_mass + inv_mass_recovery_rate, 1);\n                const ctx = {\n                    inv_mass,\n                    opts: spring,\n                    settled: true,\n                    dt: (now - last_time) * 60 / 1000\n                };\n                const next_value = tick_spring(ctx, last_value, value, target_value);\n                last_time = now;\n                last_value = value;\n                store.set(value = next_value);\n                if (ctx.settled)\n                    task = null;\n                return !ctx.settled;\n            });\n        }\n        return new Promise(fulfil => {\n            task.promise.then(() => {\n                if (token === current_token)\n                    fulfil();\n            });\n        });\n    }\n    const spring = {\n        set,\n        update: (fn, opts) => set(fn(target_value, value), opts),\n        subscribe: store.subscribe,\n        stiffness,\n        damping,\n        precision\n    };\n    return spring;\n}\n\nfunction get_interpolator(a, b) {\n    if (a === b || a !== a)\n        return () => a;\n    const type = typeof a;\n    if (type !== typeof b || Array.isArray(a) !== Array.isArray(b)) {\n        throw new Error('Cannot interpolate values of different type');\n    }\n    if (Array.isArray(a)) {\n        const arr = b.map((bi, i) => {\n            return get_interpolator(a[i], bi);\n        });\n        return t => arr.map(fn => fn(t));\n    }\n    if (type === 'object') {\n        if (!a || !b)\n            throw new Error('Object cannot be null');\n        if (is_date(a) && is_date(b)) {\n            a = a.getTime();\n            b = b.getTime();\n            const delta = b - a;\n            return t => new Date(a + t * delta);\n        }\n        const keys = Object.keys(b);\n        const interpolators = {};\n        keys.forEach(key => {\n            interpolators[key] = get_interpolator(a[key], b[key]);\n        });\n        return t => {\n            const result = {};\n            keys.forEach(key => {\n                result[key] = interpolators[key](t);\n            });\n            return result;\n        };\n    }\n    if (type === 'number') {\n        const delta = b - a;\n        return t => a + t * delta;\n    }\n    throw new Error(`Cannot interpolate ${type} values`);\n}\nfunction tweened(value, defaults = {}) {\n    const store = writable(value);\n    let task;\n    let target_value = value;\n    function set(new_value, opts) {\n        if (value == null) {\n            store.set(value = new_value);\n            return Promise.resolve();\n        }\n        target_value = new_value;\n        let previous_task = task;\n        let started = false;\n        let { delay = 0, duration = 400, easing = linear, interpolate = get_interpolator } = assign(assign({}, defaults), opts);\n        if (duration === 0) {\n            if (previous_task) {\n                previous_task.abort();\n                previous_task = null;\n            }\n            store.set(value = target_value);\n            return Promise.resolve();\n        }\n        const start = now() + delay;\n        let fn;\n        task = loop(now => {\n            if (now < start)\n                return true;\n            if (!started) {\n                fn = interpolate(value, new_value);\n                if (typeof duration === 'function')\n                    duration = duration(value, new_value);\n                started = true;\n            }\n            if (previous_task) {\n                previous_task.abort();\n                previous_task = null;\n            }\n            const elapsed = now - start;\n            if (elapsed > duration) {\n                store.set(value = new_value);\n                return false;\n            }\n            // @ts-ignore\n            store.set(value = fn(easing(elapsed / duration)));\n            return true;\n        });\n        return task.promise;\n    }\n    return {\n        set,\n        update: (fn, opts) => set(fn(target_value, value), opts),\n        subscribe: store.subscribe\n    };\n}\n\nexport { spring, tweened };\n","<script>\r\n\timport { scale } from 'svelte/transition'\r\n\timport { writable } from 'svelte/store'\r\n\timport { tweened } from 'svelte/motion'\r\n\timport { onMount } from 'svelte'\r\n\r\n\texport let pages;\r\n\texport const currentIndex = tweened(0, { duration: 500 })\r\n\r\n\texport let current\r\n\t$: current = pages[$currentIndex]\r\n\r\n\tlet show = false\r\n\tonMount(() => show = true)\r\n\r\n\tconst moveTo = idx => currentIndex.set(idx, {\r\n\t\tduration: Math.abs(idx - $currentIndex) <= 1 ? 0 : 500 \r\n\t})\r\n</script>\r\n\r\n<style>\r\n\tnav {\r\n\t\tdisplay: flex;\r\n\t\tpadding: .5em;\r\n\t\tpadding-bottom: 0;\r\n\t}\r\n\tnav > div {\r\n\t\t--sat: 100%;\r\n\t\t--lum1: 80%;\r\n\t\t--lum2: 30%;\r\n\t\tdisplay: flex;\r\n\t\tflex: 1 0;\r\n\t\tflex-direction: column;\r\n\t\tmargin: .25rem;\r\n\t}\r\n\tnav > div.current {\r\n\t\t--hue: 210 !important;\r\n\t}\r\n\tnav > div.past {\r\n\t\t--sat: 0%;\r\n\t}\r\n\tbutton {\r\n\t\tbackground-color: hsl(var(--hue), var(--sat), var(--lum1));\r\n\t\tborder: 2px solid hsl(var(--hue), var(--sat), var(--lum2));\r\n\t\tborder-radius: .5em;\r\n\t\tcolor: hsl(var(--hue), var(--sat), var(--lum2));\r\n\t\tcursor: pointer;\r\n\t\tflex: 1 0;\r\n\t\tmargin-bottom: .25rem;\r\n\t\tpadding: .5em;\r\n\t}\r\n\tbutton + button {\r\n\t\tmargin-left: .5em;\r\n\t}\r\n\tbutton:focus,\r\n\tbutton:hover {\r\n\t\t--lum1: 40%;\r\n\t\t--lum2: 95%;\r\n\t\toutline: none;\r\n\t}\r\n\tdiv.current {\r\n\t\t--hue: 210 !important;\r\n\t}\r\n\tdiv.past {\r\n\t\t--sat: 0%;\r\n\t}\r\n\r\n\t.line {\r\n\t\tbackground-color: transparent;\r\n\t\theight: 3px;\r\n\t\tmargin: 0 .25rem;\r\n\t\twidth: calc(100% - .5rem);\r\n\t}\r\n\tbutton:hover + .line,\r\n\tdiv.current > .line {\r\n\t\tbackground-color: hsl(var(--hue), var(--sat), var(--lum2));\r\n\t}\r\n</style>\r\n\r\n<nav>\r\n\t{#if show}\r\n\t{#each pages as page, idx (page.id)}\r\n\t<div class:current={$currentIndex === idx}\r\n\t\t class:past={$currentIndex > idx}\r\n\t\t style=\"--hue: {page.hue}\"\r\n\t\t in:scale={{ duration: 100, delay: 50*idx }}>\r\n\t\t<button on:click=\"{() => moveTo(idx)}\">\r\n\t\t\t{idx+1}\r\n\t\t</button>\r\n\t\t<div class=\"line\" />\r\n\t</div>\r\n\t{/each}\r\n\t{/if}\r\n</nav>","<script>\r\n    export let centered = false\r\n</script>\r\n\r\n<style>\r\n    div > :global(* + *) {\r\n        margin-top: 1rem;\r\n    }\r\n    .centered {\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        text-align: center;\r\n        transform: translate(-50%, -50%);\r\n        white-space: nowrap;\r\n    }\r\n</style>\r\n\r\n<div class:centered>\r\n    <slot></slot>\r\n</div>","---\r\n    centered: true\r\n---\r\n\r\nSvelte Society Day France 27.09.2020\r\n\r\n# Des composants sans rendu\r\n\r\nStéphane Vanraes\r\n\r\n<a href=\"https://twitter.com/StephaneVanraes\" class=\"contact-link\" target=\"_blank\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\"><path d=\"M24 4.557a9.83 9.83 0 01-2.828.775 4.932 4.932 0 002.165-2.724 9.864 9.864 0 01-3.127 1.195 4.916 4.916 0 00-3.594-1.555c-3.179 0-5.515 2.966-4.797 6.045A13.978 13.978 0 011.671 3.149a4.93 4.93 0 001.523 6.574 4.903 4.903 0 01-2.229-.616c-.054 2.281 1.581 4.415 3.949 4.89a4.935 4.935 0 01-2.224.084 4.928 4.928 0 004.6 3.419A9.9 9.9 0 010 19.54a13.94 13.94 0 007.548 2.212c9.142 0 14.307-7.721 13.995-14.646A10.025 10.025 0 0024 4.557z\"/></svg>\r\n    <span>@StephaneVanraes</span>\r\n</a>\r\n","---\r\n    centered: true\r\n---\r\n\r\n# Que sont les 'composant sans rendu' ?\r\n\r\n```svelte\r\n<slot></slot>\r\n```\r\n\r\nUn composant qui ne contient pas du HTML.","---\r\n    centered: true\r\n---\r\n\r\n# C'est un peu inutile non ?\r\n\r\n```svelte\r\n<script>\r\n    <!-- ici des scripts commun pour ce type de composant -->\r\n</script>\r\n\r\n<slot></slot>\r\n```\r\n\r\nLogique réutilisable indépendante du style.\r\n","---\r\n    centered: true\r\n---\r\n\r\n# Un simple accordéon\r\n","<script>\r\n\timport { setContext } from 'svelte'\r\n\timport { writable } from 'svelte/store'\r\n\t\t\r\n\texport let tabs\r\n\t\r\n\tconst _tabs = writable([])\r\n\tconst setTab = id => _tabs.update(arr => arr.map(t => ({ ...t, active: t.id == id })))\r\n\t\r\n\t_tabs.subscribe(t => tabs = t)\r\n\t\r\n\tsetContext('tabcontrols_tabs', { _tabs, setTab })\r\n\r\n</script>\r\n\r\n<slot name=\"tabs\" {tabs}></slot>\r\n<slot></slot>\r\n","<script>\r\n\timport { getContext, onMount } from 'svelte'\r\n\t\r\n\tconst { _tabs, setTab } = getContext('tabcontrols_tabs')\r\n\t\r\n\texport let active = false\r\n\texport let disabled = false\r\n\texport let id\r\n\texport let payload\t\r\n\t\r\n\tconst select = () => setTab(id)\r\n\t\r\n\tonMount(() => _tabs.update(t => [...t, {\t\t\r\n\t\t\tactive,\r\n\t\t\tdisabled,\r\n\t\t\tid,\r\n\t\t\tselect,\r\n\t\t\tpayload\r\n\t\t}])\r\n\t)\r\n\t\r\n\t$: tab = $_tabs.find(t => id === t.id)\r\n\t$: _active = tab && tab.active\r\n\t$: _tabs.update(t1 => t1.map(t2 => t2.id === id ? ({ ...t2, disabled }) : t2 ))\r\n\t$: _tabs.update(t1 => t1.map(t2 => t2.id === id ? ({ ...t2, active }) : t2 ))\r\n</script>\r\n\r\n{#if _active}\r\n\t<slot></slot>\r\n{/if}\r\n","<script>\r\n    import { TabControl, TabControlItem } from 'renderless-svelte'\r\n\r\n    export let items = []\r\n</script>\r\n\r\n<style>\r\n    button {\r\n\t\t--sat: 100%;\r\n\t\t--lum1: 80%;\r\n\t\t--lum2: 30%;\r\n\t\tbackground-color: white;\r\n\t\tborder: 2px solid hsl(var(--hue), var(--sat), var(--lum2));\r\n\t\tborder-radius: .5em;\r\n\t\tcolor: black;\r\n\t\tcursor: pointer;\r\n        flex: 1 0;\r\n        font-size: 1em;\r\n\t\tpadding: .5em;\r\n    }\r\n\tbutton:focus,\r\n\tbutton:hover {\r\n\t\t--lum1: 40%;\r\n\t\t--lum2: 95%;\r\n\t\toutline: none;\r\n\t}\r\n    button + button {\r\n        margin-left: 1rem;\r\n    }\r\n</style>\r\n\r\n<TabControl>\r\n    <div slot=\"tabs\" let:tabs>\r\n        {#each tabs as { active, payload, select }}\r\n            <button class:active on:click=\"{select}\">{payload}</button>\r\n        {/each}\r\n    </div>\r\n    {#each items as { label, code }, id}\r\n        <TabControlItem {id} payload={label}>\r\n            <svelte:component this={code}></svelte:component>\r\n        </TabControlItem>\r\n    {/each}\r\n</TabControl>\r\n","<script>\r\n\texport let header\r\n\t\r\n\tlet isOpen = false\r\n\tconst toggle = () => isOpen = !isOpen\r\n</script>\r\n\r\n<div>\r\n\t<button on:click={toggle}>{header}</button>\r\n\t{#if isOpen}\r\n\t\t<slot />\r\n\t{/if}\r\n</div>\r\n\r\n<style>\r\n\tdiv {\r\n\t\tmargin: 0;\r\n\t}\r\n\tbutton {\r\n\t\tborder: 1px solid #ced4da;\r\n\t\tborder-bottom: 0;\r\n\t\tcursor: pointer;\r\n\t\tdisplay: block;\r\n        font-size: 1em;\r\n\t\tmargin: 0;\r\n\t\tpadding: .25em;\r\n\t\twidth: 100%;\r\n\t}\r\n</style>","<script>\r\n    import { slide } from 'svelte/transition'\r\n\timport Accordeon from './Accordeon.svelte'\r\n\timport { smurfs } from '../../data.json'\r\n</script>\r\n\r\n{#each smurfs as { description, name, image }}\r\n    <Accordeon header=\"{name}\">\r\n\r\n        <div in:slide out:slide>\r\n            <div class=\"image\">\r\n\t\t\t\t<img src=\"{image}\" alt=\"{name}\">\r\n\t\t\t</div>\r\n\r\n            <div class=\"content\">\r\n                <h3>{name}</h3>\r\n\t\t\t\t<p>{description}</p>\r\n            </div>\r\n        </div>\r\n\r\n    </Accordeon>\r\n{/each}\r\n\r\n<style>\r\n\tdiv {\r\n\t\tdisplay: flex;\r\n        padding: 1rem;\r\n        margin: 0;\r\n\t}\r\n\t.content {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tmargin-left: 1rem;\r\n\t\tpadding: .5rem;\r\n\t}\r\n\t.image {\r\n\t\tbackground-color: white;\r\n\t\tborder: 2px solid hsl(var(--hue), 100%, 30%);\r\n\t\tborder-radius: .5em;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tflex: 1 0 200px;\r\n\t\tflex-direction: column;\r\n\t\theight: 200px;\r\n\t\tpadding: .5em;\r\n\t\twidth: 200px;\r\n\t}\r\n\timg {\r\n\t\theight: 180px;\r\n\t}\r\n\th3 {\r\n\t\tmargin: 0;\r\n\t}\r\n</style>\r\n","<script>\r\n    import CodeTabs from '../components/CodeTabs.svelte'\r\n    import Example from '../examples/05/Example.svelte'\r\n    import AccordeonCode from '../examples/05/Accordeon.svx'\r\n    import ExampleCode from '../examples/05/Example.svx'\r\n\r\n    const items = [\r\n        { label: \"L'accordéon\", code: AccordeonCode },\r\n        { label: \"l'exemple\", code: ExampleCode }\r\n    ]\r\n</script>\r\n\r\n<Example />\r\n\r\n<CodeTabs {items} />\r\n","<script>\r\n\texport let isOpen = false\r\n\t\r\n\tconst close = () => isOpen = false\r\n\tconst toggle = () => isOpen = !isOpen\t\r\n</script>\r\n\r\n<slot name=\"header\" {toggle} {isOpen} />\r\n{#if isOpen}\r\n\t<slot />\r\n{/if}\r\n","<script>\r\n    import { slide } from 'svelte/transition'\r\n\timport Accordeon from './Accordeon.svelte'\r\n\timport { smurfs } from '../../data.json'\r\n</script>\r\n\r\n{#each smurfs as { description, name, image }}\r\n    <Accordeon let:toggle>\r\n\r\n\t\t<button slot=\"header\" on:click={toggle}>{name}</button>\r\n\r\n        <div in:slide out:slide>\r\n            <div class=\"image\">\r\n\t\t\t\t<img src=\"{image}\" alt=\"{name}\">\r\n\t\t\t</div>\r\n\r\n            <div class=\"content\">\r\n                <h3>{name}</h3>\r\n\t\t\t\t<p>{description}</p>\r\n            </div>\r\n        </div>\r\n\t\t\r\n    </Accordeon>\r\n{/each}\r\n\r\n<style>\r\n\tbutton {\r\n\t\tborder: 1px solid #ced4da;\r\n\t\tcursor: pointer;\r\n\t\tdisplay: block;\r\n        font-size: 1em;\r\n\t\tmargin: 0;\r\n\t\tpadding: .25rem;\r\n\t\twidth: 100%;\r\n\t}\r\n\tdiv {\r\n\t\tdisplay: flex;\r\n        padding: 1rem;\r\n        margin: 0;\r\n\t}\r\n\t.content {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tmargin-left: 1rem;\r\n\t\tpadding: .5rem;\r\n\t}\r\n\t.image {\r\n\t\tbackground-color: white;\r\n\t\tborder: 2px solid hsl(var(--hue), 100%, 30%);\r\n\t\tborder-radius: .5em;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tflex: 1 0 200px;\r\n\t\tflex-direction: column;\r\n\t\theight: 200px;\r\n\t\tpadding: .5em;\r\n\t\twidth: 200px;\r\n\t}\r\n\timg {\r\n\t\theight: 180px;\r\n\t}\r\n\th3 {\r\n\t\tmargin: 0;\r\n\t}\r\n</style>\r\n","<script>\r\n    import CodeTabs from '../components/CodeTabs.svelte'\r\n    import Example from '../examples/06/Example.svelte'\r\n    import AccordeonCode from '../examples/06/Accordeon.svx'\r\n    import ExampleCode from '../examples/06/Example.svx'\r\n\r\n    const items = [\r\n        { label: \"L'accordéon\", code: AccordeonCode },\r\n        { label: \"l'exemple\", code: ExampleCode }\r\n    ]\r\n</script>\r\n\r\n# La même chose mais 'renderless'\r\n<br/>\r\n<Example />\r\n\r\n<CodeTabs {items} />\r\n","<script>\r\n\texport let isOpen = false\r\n\t\r\n\tconst close = () => isOpen = false\r\n\tconst toggle = () => isOpen = !isOpen\t\r\n</script>\r\n\r\n<slot name=\"header\" {toggle} {isOpen} />\r\n{#if isOpen}\r\n\t<slot />\r\n{/if}\r\n","<script>\r\n    import { slide } from 'svelte/transition'\r\n\timport Accordeon from './Accordeon.svelte'\r\n\timport { smurfs } from '../../data.json'\r\n</script>\r\n\r\n{#each smurfs as { description, name, image }}\r\n    <Accordeon let:toggle>\r\n\t\t<button slot=\"header\" on:click={toggle}>{name}</button>\r\n        <div in:slide out:slide>\r\n            <div class=\"image\">\r\n\t\t\t\t<img src=\"{image}\" alt=\"{name}\">\r\n\t\t\t</div>\r\n            <div class=\"content\">\r\n                <h3>{name}</h3>\r\n\t\t\t\t<p>{description}</p>\r\n            </div>\r\n        </div>\r\n    </Accordeon>\r\n{/each}\r\n\r\n<style>\r\n\tbutton {\r\n\t\tborder: 1px solid #ced4da;\r\n\t\tcursor: pointer;\r\n\t\tdisplay: block;\r\n        font-size: 1em;\r\n\t\tmargin: 0;\r\n\t\tpadding: .25rem;\r\n\t\twidth: 100%;\r\n\t}\r\n\tdiv {\r\n\t\tdisplay: flex;\r\n        padding: 1rem;\r\n        margin: 0;\r\n\t}\r\n\t.content {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tmargin-left: 1rem;\r\n\t\tpadding: .5rem;\r\n\t}\r\n\t.image {\r\n\t\tbackground-color: white;\r\n\t\tborder: 2px solid hsl(var(--hue), 100%, 30%);\r\n\t\tborder-radius: .5em;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tflex: 1 0 200px;\r\n\t\tflex-direction: column;\r\n\t\theight: 200px;\r\n\t\tpadding: .5em;\r\n\t\twidth: 200px;\r\n\t}\r\n\timg {\r\n\t\theight: 180px;\r\n\t}\r\n\th3 {\r\n\t\tmargin: 0;\r\n\t}\r\n</style>\r\n","<script>\r\n\timport { slide } from 'svelte/transition'\r\n\timport Accordeon from './Accordeon.svelte'\r\n\timport { notSmurfs } from '../../data.json'\r\n</script>\r\n\r\n{#each notSmurfs as notSmurf}\r\n\t<Accordeon let:toggle let:isOpen>\r\n\t\t<button class:isOpen slot=\"header\" on:click={toggle}>{notSmurf.name}</button>\r\n\t\t<div in:slide>\r\n\t\t\t<div class=\"content\">\r\n\t\t\t\t<h3>{notSmurf.name}</h3>\r\n\t\t\t\t<p>{notSmurf.description}</p>\r\n\t\t\t</div>\t\t\r\n            <div class=\"image\">\r\n\t\t\t\t<img src=\"{notSmurf.image}\" alt=\"{notSmurf.name}\">\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</Accordeon>\r\n{/each}\r\n\r\n<style>\t\r\n\tbutton {\r\n\t\tbackground-color: black;\r\n\t\tborder: 0;\r\n\t\tcolor: white;\r\n\t\tcursor: pointer;\r\n\t\tdisplay: block;\r\n\t\tfont-size: 1em;\r\n        margin: 0;\r\n        padding: .5rem;\r\n\t\tposition: relative;\r\n\t\twidth: 100%;\r\n    }\r\n\tbutton:before {\r\n\t\theight: 0;\r\n\t\tborder: 20px solid transparent;\r\n\t\tcontent: '';\r\n\t\tposition: absolute;\r\n\t\tleft: 10px;\r\n\t\twidth: 0; \r\n\t}\r\n\tbutton:active,\r\n\tbutton:hover,\r\n\tbutton:focus {\r\n\t\toutline: none;\r\n\t}\r\n\tdiv {\r\n\t\tbackground-color: hsl(0, 0%, 80%);\r\n\t\tborder: 2px solid black;\r\n\t\tdisplay: flex;\r\n        padding: 1rem;\r\n        margin: 0;\r\n\t}\r\n\t.content {\r\n\t\tborder: 0;\r\n\t\tflex-direction: column;\r\n\t}\r\n\t.image {\r\n\t\tbackground-color: white;\r\n\t\tborder: 2px solid hsl(var(--hue), 100%, 30%);\r\n\t\tborder-radius: .5em;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tflex: 1 0 200px;\r\n\t\tflex-direction: column;\r\n\t\theight: 200px;\r\n\t\tpadding: .5em;\r\n\t\twidth: 200px;\r\n\t}\r\n\timg {\r\n\t\theight: 180px;\r\n\t}\r\n\th3 {\r\n\t\tmargin: 0;\r\n\t}\r\n</style>\r\n","---\r\n    centered: true\r\n---\r\n\r\n- Aucun markup sauf des slots et des directives\r\n- Logique commun dans le script\r\n- Exposez des variables et fonctions avec <strong>let:<strong>\r\n","---\r\n    centered: true\r\n---\r\n\r\n# Le Provider Pattern\r\n","<script>\r\n\timport { setContext } from 'svelte'\r\n\t\r\n\tlet payload = false\r\n\tlet timeout\r\n\r\n\tconst hide = () => {\r\n\t\ttimeout && clearTimeout(timeout)\t\t\r\n\t\tpayload = false\r\n\t}\r\n\tconst show = val => {\r\n\t\tpayload = val\r\n\t\ttimeout && clearTimeout(timeout)\r\n\t\ttimeout = setTimeout(hide, 5000)\r\n\t}\r\n\r\n\tsetContext('notification-show', show)\t\r\n</script>\r\n\r\n{#if payload}\r\n\t<slot name=\"notification\" {hide} payload={payload} />\r\n{/if}\r\n\r\n<slot />\r\n","<script>\r\n\timport { getContext } from 'svelte'\r\n\timport { smurfs } from '../../data.json'\r\n    \r\n\tconst show = getContext('notification-show')\r\n</script>\r\n\r\n<div>\r\n\t{#each smurfs as smurf}\t\t\r\n\t\t<div class=\"image\" on:click=\"{() => show(smurf.notification)}\">\r\n\t\t\t<img src=\"{smurf.image}\" alt=\"\">\r\n\t\t</div>\r\n\t{/each}\r\n</div>\r\n\r\n<style>\r\n\tdiv {\r\n\t\tdisplay: flex;\r\n\t}\r\n\t.image {\r\n\t\tbackground-color: white;\r\n\t\tborder: 2px solid hsl(var(--hue), 100%, 30%);\r\n\t\tborder-radius: .5em;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tflex: 1 0 200px;\r\n\t\tflex-direction: column;\r\n\t\theight: 200px;\r\n\t\tpadding: .5em;\r\n\t\tmargin: .5rem;\r\n\t\twidth: 200px;\r\n\t}\r\n\timg {\r\n\t\theight: 180px;\r\n\t}\r\n</style>","<script>\r\n\timport { fly } from 'svelte/transition'\r\n\timport NotificationProvider from './NotificationProvider.svelte'\r\n\timport Smurfs from './Smurfs.svelte'\r\n</script>\r\n\r\n<NotificationProvider>\r\n\t<div in:fly={{ x: 500 }} slot=\"notification\" class=\"notification\" let:hide let:payload>\r\n\t\t<button on:click={hide}>&times;</button>\r\n\t\t<span>{payload}</span>\r\n\t</div>\r\n\t<Smurfs />\r\n</NotificationProvider>\r\n\r\n<style>\r\n\t.notification {\r\n\t\tbackground-color: hsl(40, 100%, 80%);\r\n\t\tborder-color: hsl(40, 100%, 30%);\r\n\t\tborder-radius: .5rem 0 0 .5rem;\r\n\t\tborder-style: solid;\r\n\t\tborder-width: 2px 0 2px 2px;\r\n\t\tcolor: black;\r\n\t\tmargin: 0;\r\n\t\tpadding: .5rem;\r\n\t\tposition: fixed;\r\n\t\ttop: 4rem;\r\n\t\tright: 0;\r\n\t\theight: 100px;\r\n\t\twidth: 33%;\r\n\t}\r\n\t.notification > button {\r\n\t\tcolor: inherit;\r\n\t\tcursor: pointer;\r\n\t\tposition: absolute;\r\n\t\tright: .5rem;\r\n\t\tline-height: 1.25rem;\r\n\t\ttop: .5rem;\r\n\t\tborder: 0;\r\n\t\tbackground: transparent;\r\n\t\tfont-size: 2rem;\r\n\t\tfont-weight: 600;\r\n\t\tmargin: 0;\r\n\t\tpadding: 0;\r\n\t}\r\n\t.notification > button:active,\r\n\t.notification > button:hover,\r\n\t.notification > button:focus {\r\n\t\toutline: none;\r\n\t}\r\n</style>","<script>\r\n\timport CodeTabs from '../components/CodeTabs.svelte'\r\n\timport Example from '../examples/10/Example.svelte'\r\n\timport ExampleCode from '../examples/10/Example.svx'\r\n\timport SmurfCode from '../examples/10/Smurfs.svx'\r\n\timport NotificationCode from '../examples/10/NotificationProvider.svx'\r\n\r\n\tconst items = [\r\n\t\t{ label: 'Les notifications', code: NotificationCode },\r\n\t\t{ label: 'Les Schtroumpfs', code: SmurfCode },\r\n\t\t{ label: 'La reste', code: ExampleCode },\r\n\t]\r\n</script>\r\n\r\n# Notifications\r\n\r\n<Example />\r\n\r\n<CodeTabs {items} />\r\n","<script>\r\n    import CodeTabs from '../components/CodeTabs.svelte'\r\n\r\n\timport ExampleCode from '../examples/12/Example.svx'\r\n\timport SmurfCode from '../examples/12/Smurfs.svx'\r\n\timport NotificationCode from '../examples/12/Notification.svx'\r\n\r\n\tconst items = [\r\n\t\t{ label: 'Les notifications', code: NotificationCode },\r\n\t\t{ label: 'Les Schtroumpfs', code: SmurfCode },\r\n\t\t{ label: 'La reste', code: ExampleCode },\r\n\t]\r\n</script>\r\n\r\n# En utilisant le 'context module'\r\n\r\n<CodeTabs {items} />\r\n","---\r\n    centered: true\r\n---\r\n\r\n- Le <strong>ContextAPI</strong> permis de diffuser des variables aux descendants\r\n- <strong>context=\"module\"</strong> est partagée parmis tous les instance\r\n- Utilisez des stores dans les contexts pour avoir du reactivité\r\n","<script>\r\n\timport { setContext } from 'svelte'\r\n\t\r\n\tlet current = false\r\n\t\r\n\tsetContext('accordeon', {\r\n\t\tsetCurrent: fn => {\r\n\t\t\tcurrent && current !== fn && current()\r\n\t\t\tcurrent = fn\r\n\t\t}\r\n\t})\r\n</script>\r\n\r\n<slot />\r\n","<script>\r\n\timport { getContext } from 'svelte'\r\n\texport let isOpen = false\r\n\t\r\n\tconst close = () => isOpen = false\r\n\tconst toggle = () => isOpen = !isOpen\r\n\t\r\n\tconst { setCurrent } = getContext('accordeon')\r\n\t\r\n\t$: isOpen && setCurrent(close)\r\n\t\r\n</script>\r\n\r\n<slot name=\"header\" {toggle} {isOpen} />\r\n{#if isOpen}\r\n\t<slot />\r\n{/if}\r\n","<script>\r\n    import { slide } from 'svelte/transition'\r\n\timport Accordeon from './Accordeon.svelte'\r\n\timport AccordeonItem from './AccordeonItem.svelte'\r\n\timport { smurfs } from '../../data.json'\r\n</script>\r\n\r\n<Accordeon>\r\n\t{#each smurfs as { description, name, image }}\r\n\t\t<AccordeonItem let:toggle>\r\n\t\t\t<button slot=\"header\" on:click={toggle}>{name}</button>\r\n\t\t\t<div in:slide out:slide>\r\n\t\t\t\t<div class=\"image\">\r\n\t\t\t\t\t<img src=\"{image}\" alt=\"{name}\">\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"content\">\r\n\t\t\t\t\t<h3>{name}</h3>\r\n\t\t\t\t\t<p>{description}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</AccordeonItem>\r\n\t{/each}\r\n</Accordeon>\r\n<style>\r\n\tbutton {\r\n\t\tborder: 1px solid #ced4da;\r\n\t\tcursor: pointer;\r\n\t\tdisplay: block;\r\n        font-size: 1em;\r\n\t\tmargin: 0;\r\n\t\tpadding: .25rem;\r\n\t\twidth: 100%;\r\n\t}\r\n\tdiv {\r\n\t\tdisplay: flex;\r\n        padding: 1rem;\r\n        margin: 0;\r\n\t}\r\n\t.content {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tmargin-left: 1rem;\r\n\t\tpadding: .5rem;\r\n\t}\r\n\t.image {\r\n\t\tbackground-color: white;\r\n\t\tborder: 2px solid hsl(var(--hue), 100%, 30%);\r\n\t\tborder-radius: .5em;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tflex: 1 0 200px;\r\n\t\tflex-direction: column;\r\n\t\theight: 200px;\r\n\t\tpadding: .5em;\r\n\t\twidth: 200px;\r\n\t}\r\n\timg {\r\n\t\theight: 180px;\r\n\t}\r\n\th3 {\r\n\t\tmargin: 0;\r\n\t}\r\n</style>\r\n","<script>\r\n    import CodeTabs from '../components/CodeTabs.svelte'\r\n    import Example from '../examples/14/Example.svelte'\r\n    import ExampleCode from '../examples/14/Example.svx'\r\n    import AccordeonCode from '../examples/14/Accordeon.svx'\r\n    import AccordeonItemCode from '../examples/14/AccordeonItem.svx'\r\n\r\n    const items = [\r\n        { label: \"L'accordéon\", code: AccordeonCode },\r\n        { label: \"L'accordéon item\", code: AccordeonItemCode },\r\n        { label:\"L'usage\", code: ExampleCode } \r\n    ]\r\n</script>\r\n\r\n# Et encore une fois\r\n\r\nNous pouvons également utiliser l'approche du ContextAPI pour faciliter une sorte de communication entre les composants enfants.\r\n<br/>\r\n<Example />\r\n<CodeTabs {items} />","---\r\n    centered: true\r\n---\r\n\r\n# [www.renderless-svelte.dev](http://www.renderless-svelte.dev)\r\n\r\n<a href=\"https://twitter.com/StephaneVanraes\" class=\"contact-link\" target=\"_blank\">\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\"><path d=\"M24 4.557a9.83 9.83 0 01-2.828.775 4.932 4.932 0 002.165-2.724 9.864 9.864 0 01-3.127 1.195 4.916 4.916 0 00-3.594-1.555c-3.179 0-5.515 2.966-4.797 6.045A13.978 13.978 0 011.671 3.149a4.93 4.93 0 001.523 6.574 4.903 4.903 0 01-2.229-.616c-.054 2.281 1.581 4.415 3.949 4.89a4.935 4.935 0 01-2.224.084 4.928 4.928 0 004.6 3.419A9.9 9.9 0 010 19.54a13.94 13.94 0 007.548 2.212c9.142 0 14.307-7.721 13.995-14.646A10.025 10.025 0 0024 4.557z\"/></svg>\r\n    <span>@StephaneVanraes</span>\r\n</a>\r\n\r\n'Rainlife' sur le Discord Svelte 👋\r\n\r\n[https://stephane-vanraes.github.io/rs-presentation-fr/](https://stephane-vanraes.github.io/rs-presentation-fr/)\r\n","import Page1 from './pages/01.svx'\r\nimport Page2 from './pages/02.svx'\r\nimport Page3 from './pages/03.svx'\r\nimport Page4 from './pages/04.svx'\r\nimport Page5 from './pages/05.svx'\r\nimport Page6 from './pages/06.svx'\r\nimport Page7 from './pages/07.svx'\r\nimport Page8 from './pages/08.svx'\r\nimport Page9 from './pages/09.svx'\r\nimport Page10 from './pages/10.svx'\r\nimport Page11 from './pages/11.svx'\r\nimport Page12 from './pages/12.svx'\r\nimport Page13 from './pages/13.svx'\r\nimport Page14 from './pages/14.svx'\r\nimport Page15 from './pages/15.svx'\r\n\r\nexport default [\r\n    { id: 1, component: Page1, hue: 210 },      // blue\r\n    { id: 2, component: Page2, hue: 212 },  \r\n    { id: 3, component: Page3, hue: 214 },\r\n    { id: 4, component: Page4, hue: 40 },       // yellow\r\n    { id: 5, component: Page5, hue: 42 },       \r\n    { id: 6, component: Page6, hue: 44 },\r\n    { id: 7, component: Page7, hue: 46 },\r\n    { id: 8, component: Page8, hue: 48 },       // green\r\n    { id: 9, component: Page9, hue: 140 },      \r\n    { id: 10, component: Page10, hue: 142 },\r\n    { id: 11, component: Page11, hue: 144 },\r\n    { id: 12, component: Page12, hue: 146 },\r\n    { id: 13, component: Page13, hue: 150 },\r\n    { id: 14, component: Page14, hue: 50 },\r\n    { id: 15, component: Page15, hue: 320 } \r\n]\r\n","<script>\r\n\timport { onMount } from 'svelte'\r\n\timport Navigation from './components/Navigation.svelte'\r\n\r\n\timport pages from './pages.js'\r\n\r\n\tlet current = {}\r\n\tlet _current\r\n\t$: _current = current ? current : _current\r\n</script>\r\n\r\n<style>\r\n\tmain {\t\t\r\n\t\tbackground-color: hsl(var(--hue), 100%, 90%);\r\n\t\tborder: 2px solid hsl(var(--hue), 100%, 30%);\r\n\t\tborder-radius: .25em;\r\n\t\tcolor: black;\r\n\t\t_color: hsl(var(--hue), 100%, 20%);\t\r\n\t\tflex: 1 0;\r\n\t\tmargin: .5em;\r\n\t\tmargin-top: 0;\r\n\t\tpadding: 1em;\r\n\t}\r\n</style>\r\n\r\n<Navigation bind:current {pages}/>\r\n\r\n{#if _current}\r\n\t<main style=\"--hue: {_current.hue}\">\r\n\t\t<svelte:component this={_current.component}></svelte:component>\r\n\t</main>\r\n{/if}\r\n","import App from './App.svelte';\r\n\r\nconst app = new App({\r\n\ttarget: document.body\r\n});\r\n\r\nexport default app;"],"names":["noop","identity","x","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","loop","callback","promise","Promise","fulfill","add","[object Object]","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_style","key","important","style","setProperty","toggle_class","toggle","classList","active_docs","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","t","rule","str","hash","charCodeAt","doc","ownerDocument","stylesheet","__svelte_stylesheet","head","sheet","current_rules","__svelte_rules","insertRule","cssRules","animation","delete_rule","previous","split","next","filter","anim","indexOf","deleted","join","deleteRule","clear","set_current_component","component","get_current_component","Error","onMount","$$","on_mount","push","setContext","context","set","getContext","get","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","flush","update","pop","has","fragment","before_update","after_update","wait","then","dispatch","direction","kind","dispatchEvent","type","detail","e","createEvent","initCustomEvent","custom_event","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","null_transition","create_in_transition","params","animation_name","config","running","cleanup","go","easing","tick","css","start_time","end_time","abort","started","create_out_transition","group","reset","destroy_block","lookup","get_spread_update","levels","updates","to_null_out","accounted_for","n","get_spread_object","spread_props","create_component","mount_component","on_destroy","m","new_on_destroy","map","destroy_component","make_dirty","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","Map","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","this","$destroy","index","splice","$$props","obj","$$set","keys","cubicOut","fly","y","opacity","getComputedStyle","target_opacity","transform","od","u","slide","height","parseFloat","padding_top","paddingTop","padding_bottom","paddingBottom","margin_top","marginTop","margin_bottom","marginBottom","border_top_width","borderTopWidth","border_bottom_width","borderBottomWidth","min","scale","start","sd","_t","subscriber_queue","writable","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","is_date","prototype","toString","call","get_interpolator","isArray","arr","bi","getTime","delta","interpolators","result","id","old_blocks","get_key","dynamic","list","destroy","create_each_block","get_context","old_indexes","new_blocks","new_lookup","deltas","child_ctx","abs","will_move","did_move","first","new_block","old_block","new_key","old_key","hue","pages","currentIndex","defaults","target_value","opts","previous_task","linear","interpolate","elapsed","tweened","current","show","moveTo","idx","$currentIndex","centered","metadata","tabs","_tabs","setTab","disabled","payload","select","tab","$_tabs","find","_active","t1","t2","items","header","isOpen","smurfs","label","code","AccordeonCode","ExampleCode","description","image","notSmurfs","timeout","hide","clearTimeout","val","setTimeout","smurf","notification","NotificationCode","SmurfCode","setCurrent","close","AccordeonItemCode","_current","body"],"mappings":"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"}